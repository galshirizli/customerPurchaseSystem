version: '3'

services:
  backend:
    image: galshirizli/backend:0.1
    ports:
      - "3000:3000"
    networks:
      - purchases-network
    depends_on:
      - db
      - kafka-service
      
  frontend:
    image: galshirizli/frontend:0.2
    ports:
      - "80:80"
    networks:
      - purchases-network
    depends_on:
      - db
      - kafka-service
      - backend

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - purchases-network

  kafka-service:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-service:9093,OUTSIDE://kafka-service:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - purchases-network

  db:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - /root/data:/data/db
    networks:
      - purchases-network

networks:
  purchases-network:
    driver: bridge
